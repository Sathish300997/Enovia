
                                                             promise chaining
															 ----------------
let promise=new Promise((resolve,reject)=>{
    resolve();
});
promise.then(()=>{
    console.log("first")
}).then(()=>{
    setTimeout(()=>{
        console.log("second")
    },2000)
}

).then(()=>{
    setTimeout(()=>{
        console.log("Third")
    },1000)
});


output:
     first
	 third
	 second
	 
------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                 implementing promise object in a particular then block

let promise=new Promise((resolve,reject)=>{
    resolve();
});
promise.then(()=>{
    console.log("first")
}).then(()=>{
    return new Promise((resolve,reject)=>{
         setTimeout(()=>{
             console.log("second");
             resolve();
         },4000)

     })
 }
 ).then(()=>{
    setTimeout(()=>{
        console.log("Third")
    },1000)
});

output:
      
	   first
	   second
	   Third